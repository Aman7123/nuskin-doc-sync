---
openapi: 3.0.0
info:
  title: discord-webhook-api
  description: A Discord bot for mimicking the behavior of a Discord Webhook
  version: 1.0.0
servers:
- url: http://example.com/webhook-api
  description: EXAMPLE ONLY
paths:
  /webhooks:
    post:
      summary: Builds and sends a new Discord message
      description: "This operation builds a Discord message complete with Embed support and sends it to the Discord server.\nNotice the addition of a replyTo field in the request body. \nYou will also find a new message's ID in the response header.\n"
      parameters:
      - name: Authorization
        in: header
        description: |
          The Discord Bot token.
          Format is the same as Discord Bot flow from https://discord.com/developers/docs/reference#authentication
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: serverId
        in: header
        description: The Discord server ID
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: channelId
        in: header
        description: The Discord channel ID
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The Discord message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhookItem'
      responses:
        "201":
          description: |
            The message was successfully sent to the Discord server.
            Check the headers for additional information about the message.
          headers:
            Location:
              $ref: '#/components/headers/location'
            Discord-Message-Id:
              $ref: '#/components/headers/discordMessageId'
            Discord-Name:
              $ref: '#/components/headers/discordName'
            Discord-Description:
              $ref: '#/components/headers/discordDescription'
            Discord-Public-Bot:
              $ref: '#/components/headers/discordPublicBot'
            Discord-Owner-Id:
              $ref: '#/components/headers/discordOwnerId'
            Discord-Owner-Name:
              $ref: '#/components/headers/discordOwnerName'
            Discord-Owner-Discriminator:
              $ref: '#/components/headers/discordOwnerDiscriminator'
        "400":
          description: |
            This response can be thrown for many reasons.
            This bot was designed with detailed responses, check your headers and the JSON body.
        "401":
          description: |
            In this occasion please do check the request Authorization header.
            Format is the same as Discord Bot flow from https://discord.com/developers/docs/reference#authentication
        "500":
          description: |
            Two reasons:
            Fatal error while starting embeded Discord bot, do try again!
            Fatal formatting error while building response.
            In both occasions reach out to the developer.
components:
  schemas:
    webhookItem:
      type: object
      properties:
        content:
          type: string
          description: The message content
        embeds:
          type: array
          description: The message embeds
          items:
            $ref: '#/components/schemas/embedItem'
        replyTo:
          type: string
          description: The message ID to reply to
    embedItem:
      type: object
      properties:
        title:
          type: string
          description: The embed title
        description:
          type: string
          description: The embed description
        timestamp:
          oneOf:
          - $ref: '#/components/schemas/timestampString'
          - $ref: '#/components/schemas/timestampInt'
        currentTimestamp:
          type: boolean
          description: |
            If true, the timestamp will be set to the current time.
          default: false
        color:
          type: integer
          description: The embed color, must be a color ID!
        footer:
          description: The embed footer
          allOf:
          - $ref: '#/components/schemas/embedFooter'
        image:
          type: string
          description: A URL to the main image part of an embed
        thumbnail:
          type: string
          description: A URL to the smaller upper right hand image of an embed
        author:
          description: The embed author
          allOf:
          - $ref: '#/components/schemas/embedAuthor'
        fields:
          type: array
          description: The embed fields
          items:
            $ref: '#/components/schemas/embedField'
    embedFooter:
      type: object
      properties:
        text:
          type: string
          description: The footer text
        iconUrl:
          type: string
          description: A URL to the small image on the left side of the footer.
    embedAuthor:
      type: object
      properties:
        name:
          type: string
          description: The author name
        url:
          type: string
          description: A URL to the author's page
        iconUrl:
          type: string
          description: A URL to the author's icon
    embedField:
      type: object
      properties:
        name:
          type: string
          description: The field name
        value:
          type: string
          description: The field value
        inline:
          type: boolean
          description: |
            If true, the field will be displayed inline, ust be true for all that are to reside in a single row!
          default: false
    timestampString:
      type: string
      description: |
        The timestamp string.
        Format in like 2020-01-01T00:00:00.000Z
      example: 2020-01-01T00:00:00.000Z
    timestampInt:
      type: number
      description: |
        The timestamp int.
        Format in like 1577836800
      example: 1577836800
  parameters:
    authorization:
      name: Authorization
      in: header
      description: |
        The Discord Bot token.
        Format is the same as Discord Bot flow from https://discord.com/developers/docs/reference#authentication
      required: false
      style: simple
      explode: false
      schema:
        type: string
    serverId:
      name: serverId
      in: header
      description: The Discord server ID
      required: false
      style: simple
      explode: false
      schema:
        type: string
    channelId:
      name: channelId
      in: header
      description: The Discord channel ID
      required: false
      style: simple
      explode: false
      schema:
        type: string
  headers:
    discordMessageId:
      description: The ID of the newly created message
      style: simple
      explode: false
      schema:
        type: string
    location:
      description: The location of the newly created message, a Discord URL
      style: simple
      explode: false
      schema:
        type: string
    discordName:
      description: The name of bot used to post the message, as registered in Discord
      style: simple
      explode: false
      schema:
        type: string
    discordDescription:
      description: The description of bot used to post the message, as registered in Discord
      style: simple
      explode: false
      schema:
        type: string
    discordPublicBot:
      description: If the bot used to post the message is public or not
      style: simple
      explode: false
      schema:
        type: string
    discordOwnerId:
      description: The ID of the bot owner, as registered in Discord
      style: simple
      explode: false
      schema:
        type: string
    discordOwnerName:
      description: The name of the bot owner, as they're registered in Discord
      style: simple
      explode: false
      schema:
        type: string
    discordOwnerDiscriminator:
      description: The discriminator of the bot owner, as displayed in Discord
      style: simple
      explode: false
      schema:
        type: string
